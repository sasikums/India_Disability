install.packages('caret')
source('C:/Users/Shree/Desktop/base_r.r')
library(XLConnect)
install.packages('xlsx')
library(xlsx)
install.packages('rJava')
library(XLConnect)
library(rJava)
Sys.setenv(JAVA_HOME='C:\\Program Files (x86)\\Java\\jre7')
library(rJava)
library(rJava)
enroll_14 <- read.csv('C:/Users/Shree/Google Drive/Classes/edstats/shinyapps/src_data/SRC_Cleaned_Enrollment_2014')
enroll_14 <- read.csv('C:/Users/Shree/Google Drive/Classes/edstats/shinyapps/src_data/SRC_Cleaned_Enrollment_2014.csv')
enroll_14 <- read.csv('C:/Users/Shree/Google Drive/Classes/edstats/shinyapps/src_data/SRC_Cleaned_Enrollment_2007.csv')
enroll_14 <- read.csv('C:/Users/Shree/Google Drive/Classes/edstats/shinyapps/src_data/SRC_Cleaned_Enrollment_2014.csv')
enroll_07 <- read.csv('C:/Users/Shree/Google Drive/Classes/edstats/shinyapps/src_data/SRC_Cleaned_Enrollment_2007.csv')
enroll <- bind_rows(enroll_14,enroll_07)
library(dplyr)
enroll <- bind_rows(enroll_14,enroll_07)
filter(enroll,State=='INDIA')
select(filter(enroll,State=='INDIA'),State,Year,calc_muslim_all_enr_perc)
select(filter(enroll,State=='INDIA'),State,year,calc_muslim_all_enr_perc)
select(filter(enroll,State=='INDIA'),State,year,calc_scsct_all_enr_perc)
select(filter(enroll,State=='INDIA'),State,year,calc_tot_enr)
shiny::runApp('C:/Users/Shree/Google Drive/Classes/Census_2011')
shiny::runApp('C:/Users/Shree/Google Drive/Classes/Census_2011')
library(XLConnect)
library(reshape2)
library(dplyr)
library(car)
library(XML)
library(rvest)
suppressPackageStartupMessages(library(googleVis))
library(googlesheets)
library(ggplot2)
library(scales)
#Import 'cleaned' data used in app as .csv to eliminate the cleaning process each time the app
# is loaded
import_clean <-function(ex_file){
return(read.csv(paste('./cleaned_data/',ex_file,'.csv',sep=""),stringsAsFactors=FALSE))
}
in_temp <- filter(df_disab_pop,State=="INDIA" & disability=="TotDisab" & Urban_Rural=="Total"
& Age_Group != "Age Not Stated")
in_temp <- mutate(in_temp,Age_Group=recode(age_high,"0:19='0–14 years';20:59='15–59 years';
60:100='60+ years';else='All ages'"))
## sum to world bank age groups and multiply % by 100 to conform with wb figures
in_sum <- group_by(in_temp,Age_Group,sex) %>%
summarise(India=100*sum(disabl_count)/sum(pop_count))
wb_est <- read.csv('./raw_files/worldbank_disability_estimates.csv')
wb_est <- rename(wb_est,sex=Sex) %>%
select(-Source)
wb_est <- merge(wb_est,in_sum,by=c('Age_Group','sex'))
wb_est <- melt(wb_est,id.vars=c('Age_Group','sex','Disability_Type'))
wb_est$sort_var=100
wb_est$sort_var[which(wb_est$variable=="India")]=0
# convert wb figures to percentage
df_wb_est <- arrange(wb_est,desc(sort_var)) %>%
mutate(value=value/100)
setwd('C:/Users/Shree/Google Drive/Classes/Census_2011')
#Merge World Bank estimates with India estimates
in_temp <- filter(df_disab_pop,State=="INDIA" & disability=="TotDisab" & Urban_Rural=="Total"
& Age_Group != "Age Not Stated")
in_temp <- mutate(in_temp,Age_Group=recode(age_high,"0:19='0–14 years';20:59='15–59 years';
60:100='60+ years';else='All ages'"))
## sum to world bank age groups and multiply % by 100 to conform with wb figures
in_sum <- group_by(in_temp,Age_Group,sex) %>%
summarise(India=100*sum(disabl_count)/sum(pop_count))
wb_est <- read.csv('./raw_files/worldbank_disability_estimates.csv')
wb_est <- rename(wb_est,sex=Sex) %>%
select(-Source)
wb_est <- merge(wb_est,in_sum,by=c('Age_Group','sex'))
wb_est <- melt(wb_est,id.vars=c('Age_Group','sex','Disability_Type'))
wb_est$sort_var=100
wb_est$sort_var[which(wb_est$variable=="India")]=0
# convert wb figures to percentage
df_wb_est <- arrange(wb_est,desc(sort_var)) %>%
mutate(value=value/100)
import_clean <-function(ex_file){
return(read.csv(paste('./cleaned_data/',ex_file,'.csv',sep=""),stringsAsFactors=FALSE))
}
df_dis_cit <- import_clean('top_city_data')
df_disab_pop <- import_clean('state_age_distribtution')
df_work_comp <- import_clean('employment')
df_lit_comp <- import_clean('literacy')
df_mar_comp <- import_clean('marriage')
df_dis_count <-import_clean('country_estimates')
df_wb_est <-import_clean('worldbank_estimates')
percent(df_wb_est$variable)
percent(df_wb_est$value)
in_temp <- filter(df_disab_pop,State=="INDIA" & disability=="TotDisab" & Urban_Rural=="Total"
& Age_Group != "Age Not Stated")
in_temp <- mutate(in_temp,Age_Group=recode(age_high,"0:19='0–14 years';20:59='15–59 years';
60:100='60+ years';else='All ages'"))
## sum to world bank age groups and multiply % by 100 to conform with wb figures
in_sum <- group_by(in_temp,Age_Group,sex) %>%
summarise(India=100*sum(disabl_count)/sum(pop_count))
wb_est <- read.csv('./raw_files/worldbank_disability_estimates.csv')
wb_est <- rename(wb_est,sex=Sex) %>%
select(-Source)
wb_est <- merge(wb_est,in_sum,by=c('Age_Group','sex'))
wb_est <- melt(wb_est,id.vars=c('Age_Group','sex','Disability_Type'))
wb_est$sort_var=100
wb_est$sort_var[which(wb_est$variable=="India")]=0
# convert wb figures to percentage
df_wb_est <- arrange(wb_est,desc(sort_var)) %>%
mutate(value=value/100,value.annotation=percent(value))
temp1 <- filter(wb_est,as.character(Age_Group)=='All ages' &
as.character(sex)=="All" &
as.character(Disability_Type)=="Moderate & Severe Disability" &
variable %in% c('World','India','HighIncome') ) %>%
arrange(desc(sort_var))
temp1
temp1 <- filter(df_wb_est,as.character(Age_Group)=='All ages' &
as.character(sex)=="All" &
as.character(Disability_Type)=="Moderate & Severe Disability" &
variable %in% c('World','India','HighIncome') ) %>%
arrange(desc(sort_var))
temp1
plot(gvisColumnChart(temp1,xvar=variable,yvar=c(value,value.annotation)
options=list(vAxis="{format:'#,###.#%', min:0}",
title='Moderate & Severe',
legend='none'))
)
plot(gvisColumnChart(temp1,xvar='variable',yvar=c('value','value.annotation'),
options=list(vAxis="{format:'#,###.#%', min:0}",
title='Moderate & Severe',
legend='none'))
)
df_wb_est <- arrange(wb_est,desc(sort_var)) %>%
mutate(value=value/100,value.annotation=percent(value),value.style="'color:red'")
df_wb_est
temp1 <- filter(df_wb_est,as.character(Age_Group)=='All ages' &
as.character(sex)=="All" &
as.character(Disability_Type)=="Moderate & Severe Disability" &
variable %in% c('World','India','HighIncome') ) %>%
arrange(desc(sort_var))
plot(gvisColumnChart(temp1,xvar='variable',yvar=c('value','value.annotation','value.style''),
options=list(vAxis="{format:'#,###.#%', min:0}",
title='Moderate & Severe',
legend='none'))
)
plot(gvisColumnChart(temp1,xvar='variable',yvar=c('value','value.annotation','value.style'),
options=list(vAxis="{format:'#,###.#%', min:0}",
title='Moderate & Severe',
legend='none'))
)
temp1
df_wb_est <- arrange(wb_est,desc(sort_var)) %>%
mutate(value=value/100,value.annotation=percent(value),value.style="color: green")
temp1 <- filter(df_wb_est,as.character(Age_Group)=='All ages' &
as.character(sex)=="All" &
as.character(Disability_Type)=="Moderate & Severe Disability" &
variable %in% c('World','India','HighIncome') ) %>%
arrange(desc(sort_var))
plot(gvisColumnChart(temp1,xvar='variable',yvar=c('value','value.annotation','value.style'),
options=list(vAxis="{format:'#,###.#%', min:0}",
title='Moderate & Severe',
legend='none'))
)
df_wb_est <- arrange(wb_est,desc(sort_var)) %>%
mutate(value=value/100,value.annotation=percent(value),value.style="")
df_wb_est$value.style[which(df_wb_est$variable=="India")]="color: #D00000"
temp1 <- filter(df_wb_est,as.character(Age_Group)=='All ages' &
as.character(sex)=="All" &
as.character(Disability_Type)=="Moderate & Severe Disability" &
variable %in% c('World','India','HighIncome') ) %>%
arrange(desc(sort_var))
plot(gvisColumnChart(temp1,xvar='variable',yvar=c('value','value.annotation','value.style'),
options=list(vAxis="{format:'#,###.#%', min:0}",
title='Moderate & Severe',
legend='none'))
)
export_clean(df_wb_est,'worldbank_estimates')
export_clean <-function(ex_data,ex_file){
write.csv(ex_data,paste('./cleaned_data/',ex_file,'.csv',sep=""),row.names=FALSE)
}
export_clean(df_wb_est,'worldbank_estimates')
df_wb_est <-import_clean('worldbank_estimates')
df_wb_est
shiny::runApp()
shiny::runApp()
shiny::runApp()
?div
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
wb_est <- read.csv('./raw_files/worldbank_disability_estimates.csv')
wb_est <- rename(wb_est,sex=Sex) %>%
select(-Source)
unique(wb_est$Age_Group)
unique(in_sum$Age_Group)
wb_est <- read.csv('./raw_files/worldbank_disability_estimates.csv')
wb_est <- rename(wb_est,sex=Sex) %>%
mutate(Age_Group=as.character(Age_Group))
select(-Source)
wb_est1 <- merge(wb_est,in_sum,by=c('Age_Group','sex'))
unique(wb_est1$Age_Group)
unique(wb_est$Age_Group)
unique(in_sum$Age_Group)
wb_est1 <- merge(wb_est,in_sum,by=c('Age_Group','sex'),all=TRUE)
wb_est1
filter(wb_est,Age_Group=='0–14 years')
unique(wb_est$Age_Group)
filter(wb_est,Age_Group=='0-14 years')
unique(wb_est$Age_Group)
in_temp <- filter(df_disab_pop,State=="INDIA" & disability=="TotDisab" & Urban_Rural=="Total"
& Age_Group != "Age Not Stated")
in_temp <- mutate(in_temp,Age_Group=recode(age_high,"0:19='0–14 years';20:59='15-59 years';
60:100='60+ years';else='All ages'"))
## sum to world bank age groups and multiply % by 100 to conform with wb figures
in_sum <- group_by(in_temp,Age_Group,sex) %>%
summarise(India=100*sum(disabl_count)/sum(pop_count))
wb_est <- read.csv('./raw_files/worldbank_disability_estimates.csv')
wb_est <- rename(wb_est,sex=Sex) %>%
mutate(Age_Group=as.character(Age_Group))
select(-Source)
wb_est1 <- merge(wb_est,in_sum,by=c('Age_Group','sex'),all=TRUE)
unique(wb_est1$Age_Group)
unique(wb_est$Age_Group)
unique(in_sum$Age_Group)
in_temp <- filter(df_disab_pop,State=="INDIA" & disability=="TotDisab" & Urban_Rural=="Total"
& Age_Group != "Age Not Stated")
in_temp <- mutate(in_temp,Age_Group=recode(age_high,"0:19='0–14 years';20:59='15-59 years';
60:100='60+ years';else='All ages'"))
## sum to world bank age groups and multiply % by 100 to conform with wb figures
in_sum <- group_by(in_temp,Age_Group,sex) %>%
summarise(India=100*sum(disabl_count)/sum(pop_count))
wb_est <- read.csv('./raw_files/worldbank_disability_estimates.csv')
wb_est <- rename(wb_est,sex=Sex) %>%
mutate(Age_Group=as.character(Age_Group)) %>%
select(-Source)
wb_est1 <- merge(wb_est,in_sum,by=c('Age_Group','sex'),all=TRUE)
unique(wb_est1$Age_Group)
unique(wb_est$Age_Group)
unique(in_sum$Age_Group)
wb_est <- merge(wb_est,in_sum,by=c('Age_Group','sex'),all=TRUE)
wb_est <- melt(wb_est,id.vars=c('Age_Group','sex','Disability_Type'))
wb_est$sort_var=100
wb_est$sort_var[which(wb_est$variable=="India")]=0
# convert wb figures to percentage
df_wb_est <- arrange(wb_est,desc(sort_var)) %>%
mutate(value=value/100,value.annotation=percent(value),value.style="")
df_wb_est$value.style[which(df_wb_est$variable=="India")]="color: #D00000"
export_clean(df_wb_est,'worldbank_estimates')
unique(df_wb_est$Age_Group)
shiny::runApp()
x<-'World'
c('World','India',x)
shiny::runApp()
